{"mappings":"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","sources":["views/logs.js","elements/record-button.js","inspector/LogsObserver.js"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, css, LitElement } from 'lit'\nimport '../elements/pill-toggle.js'\nimport '../elements/record-button.js';\n\nimport { LogsObserver } from '../inspector/LogsObserver'\n\nexport class ViewLogs extends LitElement {\n  static styles = css`\n    :host{\n        background:white;\n        display:flex;\n        width:100%;\n        height:100%;\n        overflow-y:auto;\n    }\n    main{\n        height: 100%;\n        max-height: 100%;\n        overflow-y: auto;\n        flex-grow: 8;\n        flex: 5;\n    }\n    aside{\n        contain:strict;\n        height: 100%;\n        max-width: 20vw;\n        min-width: 200px;\n        flex-grow: 1;\n        display: flex;\n        flex-direction: column;\n        padding: 20px;\n        border-right: solid 1px var(--lt-color-gray-900);\n        flex: 1;\n    }\n    aside > *{\n        margin-top:10px;\n    }\n    aside p\n    {\n        margin-bottom: 0;\n        font-weight: bold;\n        margin-top: 40px;\n    }\n\n    ul{\n        display: flex;\n        flex-direction: row;\n        flex-wrap: wrap;\n        padding: 0;\n        max-width: 30vw;\n        justify-content: space-between;\n    }\n    ul >*{\n        flex-grow:1;\n    }\n    input{\n        padding: 10px 5px;\n        border-radius: 10px;\n        border: 1px solid var(--lt-color-gray-400);\n    }\n    table{\n        padding: 20px;  \n        border-spacing: 10px 5px;\n    }\n    .heading{\n        position:sticky;\n        top:0px;\n        background:white;\n        padding:20px;\n    }\n    tr{\n        margin: 20px 0px;\n    }\n    \n    `\n\n  static properties = {\n    filter: { type: String },\n    logs: { attribute: false },\n    components: { attribute: false }\n  }\n\n  connectedCallback () {\n    super.connectedCallback()\n\n    this.filter = ''\n    this.logs = []\n    this.components = []\n\n    this.logs = LogsObserver.LOG_ELEMENTS\n    this.components = LogsObserver.LOG_COMPONENT\n\n    LogsObserver.on('newLogs', (e) => {\n      this.requestUpdate('logs')\n    })\n    LogsObserver.on('newComponent', (e) => {\n      this.requestUpdate('components')\n    })\n  }\n\n  logRow (row) {\n    return html`\n            <tr>\n                <td>${row.date.getHours()}:${row.date.getMinutes()}:${row.date.getSeconds()}</td>\n                <td>${row.component}</td>\n                <td>${row.log}</td>\n            </tr>\n        `\n  }\n\n  get renderlist () {\n    let outList = this.logs\n    if (this.filter) {\n      outList = outList.filter((l) => l.raw.includes(this.filter))\n    }\n    const activePills = Array.from(this.renderRoot.querySelectorAll('pill-toggle.active'))\n    const filterComponents = activePills.map(e => e.textContent)\n    if (filterComponents.length > 0) {\n      outList = outList.filter(row => filterComponents.includes(row.component))\n    }\n    return outList\n  }\n\n  logComponentFilter (component) {\n    return html`\n            <pill-toggle>${component}</pill-toggle>\n        `\n  }\n\n  render () {\n    return html`\n        <aside>\n            <record-button></record-button>\n            <input placeholder=\"filter\" value=\"${this.filter}\" @change=${(e) => this.filter = e.target.value}>\n            <p>Components</p>\n            <ul @click=${() => { this.requestUpdate('logs') }}>\n                ${this.components.map(this.logComponentFilter)}\n            </ul>\n\n        </aside>\n        <main>\n            <table>\n                <tr class=\"heading\">\n                    <th>Time</th>\n                    <th>Component</th>\n                    <th>Message</th>\n                </tr>\n                ${this.renderlist.map(row => this.logRow(row))}\n            </table>\n        </main>\n    `\n  }\n}\ncustomElements.define('view-logs', ViewLogs)\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport {html, css, LitElement} from 'lit'\n\nimport {LogsObserver} from '../inspector/LogsObserver'\n\nexport class RecordButton extends LitElement {\n  static styles = css`\n    :host{\n        margin:2px;\n    }\n    :host button{\n        border-radius: 8px;\n        padding: 6px;\n        background:blue;\n        color: white;\n        width: 100%;\n    }\n    :host(.recording) button{\n        background:red;\n    }\n    `\n\n  static properties = {\n    recording: {type: Boolean},\n    content: {type: String},\n  }\n\n  constructor() {\n    super();\n    this.recording = false;\n    this.setContent();\n  }\n\n  setContent() {\n    if (this.recording) this.content = \"Stop recording\";\n    else this.content = \"Start recording\";\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('click', () => {\n      this.classList.toggle('recording');\n\n      this.recording = !this.recording;\n      this.setContent();\n\n      if (!this.recording) {\n        const entries = LogsObserver.stopRecording();\n        this.saveLogs(entries);\n        return;\n      }\n\n      LogsObserver.startRecording();\n    })\n  }\n\n  render() {\n    return html`<button>${this.content}</button>`\n  }\n\n  saveLogs(entries) {\n    const a = document.createElement('a');\n    document.body.appendChild(a);\n    a.style = 'display: none';\n\n    const blob = new Blob([entries.join('\\n')], {type: 'octet/stream'});\n    const url = window.URL.createObjectURL(blob);\n    a.href = url;\n    a.download = 'mozillavpn.txt';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  }\n}\n\ncustomElements.define('record-button', RecordButton)\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { Client } from './client'\nimport { GenericDispatcher } from './genericdispatcher'\n\nconst MAX_LOG_COUNT = 200\n\nclass _LogsObserver extends GenericDispatcher {\n  constructor () {\n    super();\n    this.LOG_ELEMENTS = [];\n    this.LOG_MODULES = [];\n    this.LOG_COMPONENT = [];\n\n    this.recording = false;\n    this.rowLogEntries = [];\n\n    Client.on('log', (message) => this.processLogLine(message.value))\n  }\n\n  startRecording() {\n    this.recording = true;\n  }\n\n  stopRecording() {\n    this.recording = false;\n    const entries = this.rowLogEntries;\n    this.rowLogEntries = [];\n    return entries;\n  }\n\n  parseDate (str) {\n    const parts = str.split(' ')\n    const date = parts[0].split('.')\n    return new Date(`${date[2]}-${date[1]}-${date[0]}T${parts[1]}`)\n  }\n\n  detectType (modules, log) {\n    if (/Set state:/.exec(log) && modules.includes('main')) {\n      return TYPE_VPN_STATE\n    }\n\n    if (/Setting state:/.exec(log) && modules.includes('controller')) {\n      return TYPE_CONTROLLER_STATE\n    }\n\n    return null\n  }\n\n  processLogLine(line) {\n    if (this.recording) {\n      this.rowLogEntries.push(line);\n    }\n\n    if (line.length === 0 || line[0] !== '[') return\n    const dateEndPos = line.indexOf(']')\n    if (dateEndPos === -1) return\n    const dateString = line.slice(1, dateEndPos)\n    line = line.slice(dateEndPos + 1).trim()\n\n    const categoryStartPos = line.indexOf('(')\n    if (categoryStartPos === -1) return\n\n    line = line.slice(categoryStartPos)\n    const categoryEndPos = line.indexOf(')')\n    if (categoryEndPos === -1) return\n    const categoryString = line.slice(1, categoryEndPos)\n    const log = line.slice(categoryEndPos + 1).trim()\n\n    const sepPos = categoryString.indexOf(' - ')\n    if (sepPos === -1) return\n    const modules = categoryString.slice(0, sepPos).split('|')\n    const component = categoryString.slice(sepPos + 3)\n\n    const entry = {\n      date: this.parseDate(dateString),\n      detectedType: this.detectType(modules, log),\n      modules,\n      component,\n      log: log\n    }\n    this.LOG_ELEMENTS.push(entry)\n    if (this.LOG_ELEMENTS.length > MAX_LOG_COUNT) {\n      this.LOG_ELEMENTS.shift()\n    }\n\n    for (const module of modules) {\n      if (!this.LOG_MODULES.includes(module)) {\n        this.LOG_MODULES.push(module)\n        this.emit({\n          type: 'newModule',\n          entry: module,\n          list: this.LOG_MODULES\n        })\n      }\n    }\n\n    if (!this.LOG_COMPONENT.includes(component)) {\n      this.LOG_COMPONENT.push(component)\n      this.emit({\n        type: 'newComponent',\n        entry: component,\n        list: this.LOG_COMPONENT\n      })\n    }\n\n    this.emit({\n      type: 'newLogs',\n      entry,\n      list: this.LOG_ELEMENTS\n    })\n  }\n}\n\nexport const LogsObserver = new _LogsObserver()\n"],"names":["$0840d537957c6314$export$5d1af790d5131fc4","$aD10K","LitElement","css","$0385bf59025d6491$export$f9da3144ae2525a3","type","Boolean","content","String","this","recording","connectedCallback","super","addEventListener","classList","toggle","setContent","$2KwL0","LogsObserver","startRecording","entries","stopRecording","saveLogs","html","document","body","appendChild","a","$200949864c235080$var$_LogsObserver","$vbrOd","GenericDispatcher","LOG_ELEMENTS","LOG_MODULES","LOG_COMPONENT","rowLogEntries","$cud2N","Client","on","message","processLogLine","value","parseDate","str","parts","split","date","Date","detectType","modules","log","exec","includes","TYPE_VPN_STATE","TYPE_CONTROLLER_STATE","line","push","length","dateEndPos","indexOf","dateString","slice","categoryStartPos","trim","categoryEndPos","categoryString","sepPos","component","entry","detectedType","shift","module","emit","list","$200949864c235080$export$b6c803dde5698d88"],"version":3,"file":"logs.7e4e8e1e.js.map"}